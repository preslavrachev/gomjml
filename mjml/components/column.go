package components

import (
	"strings"

	"github.com/preslavrachev/gomjml/mjml/html"
	"github.com/preslavrachev/gomjml/parser"
)

// MJColumnComponent represents mj-column
type MJColumnComponent struct {
	*BaseComponent
}

// NewMJColumnComponent creates a new mj-column component
func NewMJColumnComponent(node *parser.MJMLNode) *MJColumnComponent {
	return &MJColumnComponent{
		BaseComponent: NewBaseComponent(node),
	}
}

func (c *MJColumnComponent) Render() (string, error) {
	var output strings.Builder

	// Helper function to get attribute with default
	getAttr := func(name string) string {
		if attr := c.GetAttribute(name); attr != nil {
			return *attr
		}
		return c.GetDefaultAttribute(name)
	}

	// Get attributes
	width := getAttr("width")
	verticalAlign := getAttr("vertical-align")
	direction := getAttr("direction")

	// Column div with MRML-style responsive styles
	// NOTE: MSO conditional TD is generated by the parent section component
	columnDiv := html.NewHTMLTag("div").
		AddAttribute("class", "mj-outlook-group-fix mj-column-per-100").
		AddStyle("font-size", "0px").
		AddStyle("text-align", "left").
		AddStyle("direction", direction).
		AddStyle("display", "inline-block").
		AddStyle("vertical-align", verticalAlign).
		AddStyle("width", width)

	// Apply background and border styles if any
	c.ApplyBackgroundStyles(columnDiv)
	c.ApplyBorderStyles(columnDiv)

	output.WriteString(columnDiv.RenderOpen())

	// Inner table for column content
	innerTable := html.NewTableTag().
		AddAttribute("width", "100%").
		AddStyle("vertical-align", verticalAlign)

	output.WriteString(innerTable.RenderOpen())
	output.WriteString("<tbody>")

	// Render column content
	for _, child := range c.Children {
		childHTML, err := child.Render()
		if err != nil {
			return "", err
		}
		output.WriteString(childHTML)
	}

	output.WriteString("</tbody>")
	output.WriteString(innerTable.RenderClose())
	output.WriteString(columnDiv.RenderClose())

	return output.String(), nil
}

func (c *MJColumnComponent) GetTagName() string {
	return "mj-column"
}

func (c *MJColumnComponent) GetDefaultAttribute(name string) string {
	switch name {
	case "width":
		return "100%"
	case "vertical-align":
		return "top"
	case "direction":
		return "ltr"
	case "text-align":
		return "left"
	default:
		return ""
	}
}

// GetMSOTDStyles returns the styles that should be applied to the MSO conditional TD
// This is called by the parent section component, matching MRML's set_style_td_outlook
func (c *MJColumnComponent) GetMSOTDStyles() map[string]string {
	getAttr := func(name string) string {
		if attr := c.GetAttribute(name); attr != nil {
			return *attr
		}
		return c.GetDefaultAttribute(name)
	}

	verticalAlign := getAttr("vertical-align")

	// Calculate pixel width for MSO conditional using container width passed from parent
	msoPixelWidth := c.GetEffectiveWidthString()

	return map[string]string{
		"vertical-align": verticalAlign,
		"width":          msoPixelWidth,
	}
}
